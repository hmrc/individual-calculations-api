post:
  tags:
    - Tax Calculations
  summary: Trigger a Self Assessment Tax Calculation
  description: |
    This endpoint allows the user to trigger a self assessment tax calculation for a given tax year. 
    It should be called whenever income data is updated through a periodic or annual endpoint. 
    To trigger a final declaration self assessment tax calculation, 
    you must supply the finalDeclaration query parameter as true. 
    
    A National Insurance number and tax year must be provided. 
    
    The tax calculation process is asynchronous, so it is recommended you wait at least 5 seconds 
    before calling the retrieval endpoint. 
    The result of the calculation can be seen using the 
    “Retrieve a Self Assessment Tax Calculation” endpoint.
    
    ### Test data
    Scenario simulations using `Gov-Test-Scenario` headers is only available in the sandbox environment.
    <table>
        <thead>
            <tr>
                <th>Header Value (Gov-Test-Scenario)</th>
                <th>Scenario</th>
            </tr>
        </thead>
        <tbody> 
            <tr>
                <td><p>N/A - DEFAULT</p></td>
                <td><p>Simulates success response.</p></td>
            </tr>
            <tr>
                <td><p>NO_INCOME_SUBMISSIONS_EXIST</p></td>
                <td><p>Simulates the scenario where no income submissions exist for the tax year.</p></td>
            </tr>    
            <tr>
                <td><p>FINAL_DECLARATION_RECEIVED</p></td>
                <td><p>Simulates the scenario where a final declaration has already been received.</p></td>
            </tr>    
            <tr>
                <td><p>INCOME_SOURCES_CHANGED</p></td>
                <td><p>Simulates the scenario where income sources data has changed.</p></td>
            </tr>    
            <tr>
                <td><p>RECENT_SUBMISSIONS_EXIST</p></td>
                <td><p>Simulates the scenario where more recent submissions exist.</p></td>
            </tr>    
            <tr>
                <td><p>RESIDENCY_CHANGED</p></td>
                <td><p>Simulates the scenario where residency has changed.</p></td>
            </tr>    
            <tr>
                <td><p>CALCULATION_IN_PROGRESS</p></td>
                <td><p>Simulates the scenario where a calculation is in progress.</p></td>
            </tr>    
            <tr>
                <td><p>BUSINESS_VALIDATION_FAILURE</p></td>
                <td><p>Simulates the scenario where there is a generic business validation rule failure.</p></td>
            </tr>    
            <tr>
                <td><p>TAX_YEAR_NOT_ENDED</p></td>
                <td><p>Simulates the scenario where a triggering for a final declaration is performed before the tax year has ended.</p></td>
            </tr>
        </tbody>
    </table>

  parameters:
    - $ref: ./common/pathParameters.yaml#/components/parameters/nino
    - $ref: ./common/pathParameters.yaml#/components/parameters/taxYearMinimum2018
    - $ref: ./common/queryParameters.yaml#/components/parameters/finalDeclaration
    - $ref: ./common/headers.yaml#/components/parameters/acceptJson
    - $ref: ./common/headers.yaml#/components/parameters/authorizationWriteScopeHeader
    - $ref: ./common/headers.yaml#/components/parameters/testScenarioHeader

  security:
    - User-Restricted:
        - write:self-assessment

  responses:
    202:
      description: Success
      headers:
        X-CorrelationId:
          $ref: ./common/headers.yaml#/components/parameters/correlationId
      content:
        application/json:
          schema:
            $ref: ./schemas/trigger/trigger_response.json
          examples:
            example-response:
              description: Example Response
              value:
                $ref: ./examples/trigger/trigger_response.json

    400:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: ./schemas/error-response.yaml
          examples:
            FORMAT_NINO:
              $ref: ./common/errors.yaml#/components/examples/formatNino
            FORMAT_TAX_YEAR:
              $ref: ./common/errors.yaml#/components/examples/formatTaxYear
            RULE_TAX_YEAR_RANGE_INVALID:
              $ref: ./common/errors.yaml#/components/examples/ruleTaxYearRangeInvalid
            RULE_TAX_YEAR_NOT_SUPPORTED:
              $ref: ./common/errors.yaml#/components/examples/ruleTaxYearNotSupported
            FORMAT_FINAL_DECLARATION:
              $ref: ./common/errors.yaml#/components/examples/formatFinalDeclaration
            RULE_NO_INCOME_SUBMISSIONS_EXIST:
              $ref: ./common/errors.yaml#/components/examples/ruleNoIncomeSubmissionExists
            RULE_FINAL_DECLARATION_RECEIVED:
              $ref: ./common/errors.yaml#/components/examples/ruleFinalDeclarationReceived
            RULE_INCOME_SOURCES_CHANGED:
              $ref: ./common/errors.yaml#/components/examples/triggerRuleIncomeSourcesChanged
            RULE_RESIDENCY_CHANGED:
              $ref: ./common/errors.yaml#/components/examples/triggerRuleResidencyChanged
            RULE_TAX_YEAR_NOT_ENDED:
              $ref: ./common/errors.yaml#/components/examples/triggerRuleTaxYearNotEnded
            RULE_RECENT_SUBMISSIONS_EXIST:
              $ref: ./common/errors.yaml#/components/examples/triggerRuleRecentSubmissionsExist
            RULE_CALCULATION_IN_PROGRESS:
              $ref: ./common/errors.yaml#/components/examples/triggerRuleCalculationInProgress
            RULE_BUSINESS_VALIDATION_FAILURE:
              $ref: ./common/errors.yaml#/components/examples/triggerRuleBusinessValidationFailure
            RULE_INCORRECT_GOV_TEST_SCENARIO:
              $ref: ./common/errors.yaml#/components/examples/ruleIncorrectGTS

    403:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: ./schemas/error-response.yaml
          examples:
            CLIENT_OR_AGENT_NOT_AUTHORISED:
              $ref: ./common/errors.yaml#/components/examples/clientOrAgentNotAuthorised
