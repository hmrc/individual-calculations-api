# Copyright 2025 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~

include "backend.conf"

appName = individual-calculations-api

appUrl = "http://localhost:9767"

# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
# play.http.secret.key = "" // provided with Bootstrap

# Session configuration
# ~~~~~
application.session.httpOnly = false

application.session.secure = false

# The application languages
# ~~~~~
play.i18n.langs = ["en"]

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
play.http.router = prod.Routes

# Primary entry point for all HTTP requests on Play applications
play.http.requestHandler = "shared.routing.VersionRoutingRequestHandler"

# Allow api-documentation-frontend for local documentation preview
play.filters.enabled += "play.filters.cors.CORSFilter"
play.filters.cors {
  allowedOrigins = ["http://localhost:9680"]
}

# Json error handler
play.http.errorHandler = "shared.utils.ErrorHandler"

# Play Modules
# ~~~~
# Additional play modules can be added here
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientV2Module"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"
play.modules.enabled += "config.CalculationsPlayModule"

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Api related config
api {
  # The status of the version of the API for the API Platform.
  6.0 {
        status = "DEPRECATED"
        deprecatedOn = "2025-06-12"
        endpoints {
            enabled = true
            api-released-in-production = false
        }
  }

  7.0 {
        status = "DEPRECATED"
        deprecatedOn = "2025-10-16"
        endpoints {
            enabled = true
            api-released-in-production = false
        }
  }

  8.0 {
          status = "BETA"
          endpoints {
              enabled = true
              api-released-in-production = false
          }
    }

  confidence-level-check {
    confidence-level = 250
    definition.enabled = true
    auth-validation.enabled = true
  }

   supporting-agent-endpoints {
     retrieve-calculation = false
     submit-final-declaration = false
     list-calculations = false
     trigger-calculation = false
   }

  # The context which the API will have via the API Platform http://API_GATEWAY/{api.gateway.context}/
  gateway.context = "individuals/calculations"

  documentation-url = "https://developer.service.hmrc.gov.uk/api-documentation/docs/api/service/individual-calculations-api"
}

# HTTP Verbs related config
bootstrap.http.headersAllowlist = [ "Accept", "Gov-Test-Scenario", "Content-Type", "Location", "X-Request-Timestamp", "X-Session-Id", "X-CorrelationId" ]
internalServiceHostPatterns = [ "localhost" ]

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
  enabled = true
}

# Microservice specific config

feature-switch {
  desIf_Migration.enabled = false
  des_hip_migration_1404.enabled = true
  ifs_hip_migration_1885.enabled = true
  ifs_hip_migration_1885_docs.enabled = true
  ifs_hip_migration_1896.enabled = true

  supporting-agents-access-control {
    enabled = true
    released-in-production = false
  }

  high-income-child-benefit-charge-fields {
    enabled = true
    released-in-production = true
  }

  social-investment-fields-deprecation.enabled = true

  api_1885_cgt_r18_docs.enabled = true

}

retry-mechanism {
  numberOfRetries = 3
  initialDelay = 500 milliseconds
}

microservice {

  services {

    auth {
      host = localhost
      port = 8500
    }

    mtd-id-lookup {
      host = localhost
      port = 9769
    }

    individual-calculations {
      host = localhost
      port = 9766
    }

    des {
      host = 127.0.0.1
      port = 9772
      env = Prod
      token = ABCD1234
      environmentHeaders = ["Accept", "Gov-Test-Scenario", "Content-Type", "Location", "X-Request-Timestamp", "X-Session-Id", "X-Request-Id"]
    }

    ifs {
      host = 127.0.0.1
      port = 9772
      env = Prod
      token = ABCD1234
      environmentHeaders = ["Accept", "Gov-Test-Scenario", "Content-Type", "Location", "X-Request-Timestamp", "X-Session-Id", "X-Request-Id"]
    }

    hip {
      host = 127.0.0.1
      port = 9772
      env = Prod
      clientId = "someClientId"
      clientSecret = "someClientSecret"
      environmentHeaders = ["Accept", "Gov-Test-Scenario", "Location", "X-Request-Timestamp", "X-Session-Id", "X-Request-Id"]
    }

    mtd-api-nrs-proxy {
          host = localhost
          port = 7779
    }
  }
}
